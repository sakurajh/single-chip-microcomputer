C51 COMPILER V9.54   I2C                                                                   08/02/2023 12:19:46 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\build\Release\src\I2C.o
COMPILER INVOKED BY: d:\keil\C51\BIN\C51.exe .\SRC\I2C.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\Release\src\I2C.
                    -lst) INCDIR(d:/keil/C51/INC;src) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Release
                    -\src\I2C.o)

line level    source

   1          #include<REG51.H>
   2          
   3          sbit I2C_SCL=P2^1;
   4          sbit I2C_SDA=P2^0;
   5          
   6          
   7          /// @brief I2C开始
   8          /// @param  无
   9          void I2C_Start(void)
  10          {
  11   1          I2C_SDA=1;
  12   1          I2C_SCL=1;
  13   1          I2C_SDA=0;
  14   1          I2C_SCL=0;
  15   1      }
  16          /// @brief I2C停止
  17          /// @param  无
  18          void I2C_Stop(void)
  19          {
  20   1          I2C_SDA=0;
  21   1          I2C_SCL=1;
  22   1          I2C_SDA=1;
  23   1      }
  24          /// @brief I2C发送一个字节
  25          /// @param  Byte  要发送的字节
  26          void I2C_SendByte(unsigned char Byte)
  27          {
  28   1          unsigned char i;
  29   1          for(i=0;i<8;i++)
  30   1          {
  31   2          I2C_SDA=Byte&(0x80>>i);
  32   2          I2C_SCL=1;
  33   2          I2C_SCL=0;
  34   2      
  35   2          }
  36   1      
  37   1      }
  38          /// @brief I2C 接收一个字节
  39          /// @param  无
  40          unsigned char I2C_ReceiveByte(void)
  41          {
  42   1          unsigned char Byte=0x00,i;
  43   1      
  44   1          I2C_SDA=1;
  45   1      
  46   1          for ( i = 0; i < 8; i++)
  47   1          {
  48   2          I2C_SCL=1;
  49   2          if(I2C_SDA){Byte|=(0x80>>i);}
  50   2          I2C_SCL=0;
  51   2          }
  52   1          return Byte;
  53   1      }
C51 COMPILER V9.54   I2C                                                                   08/02/2023 12:19:46 PAGE 2   

  54          /// @brief I2C发送应答
  55          /// @param  AckBit  应答位,0为应答.1为非应答 
  56          void I2C_SendAck(unsigned char AckBit)
  57          {
  58   1          I2C_SDA=AckBit;
  59   1          I2C_SCL=1;
  60   1          I2C_SCL=0;
  61   1      }
  62          /// @brief I2C接收应答位
  63          /// @param  接收到的应答位,0为应答.1为非应答 
  64          unsigned char I2C_ReceiveAck(void)
  65          {
  66   1          unsigned char AckBit;
  67   1          I2C_SDA=1;
  68   1          I2C_SCL=1;
  69   1          AckBit=I2C_SDA;
  70   1          I2C_SCL=0;
  71   1          return AckBit;
  72   1      }
C51 COMPILER V9.54   I2C                                                                   08/02/2023 12:19:46 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION I2C_Start (BEGIN)
                                           ; SOURCE LINE # 9
                                           ; SOURCE LINE # 10
                                           ; SOURCE LINE # 11
0000 D2A0              SETB    I2C_SDA
                                           ; SOURCE LINE # 12
0002 D2A1              SETB    I2C_SCL
                                           ; SOURCE LINE # 13
0004 C2A0              CLR     I2C_SDA
                                           ; SOURCE LINE # 14
0006 C2A1              CLR     I2C_SCL
                                           ; SOURCE LINE # 15
0008 22                RET     
             ; FUNCTION I2C_Start (END)

             ; FUNCTION I2C_Stop (BEGIN)
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 20
0000 C2A0              CLR     I2C_SDA
                                           ; SOURCE LINE # 21
0002 D2A1              SETB    I2C_SCL
                                           ; SOURCE LINE # 22
0004 D2A0              SETB    I2C_SDA
                                           ; SOURCE LINE # 23
0006 22                RET     
             ; FUNCTION I2C_Stop (END)

             ; FUNCTION _I2C_SendByte (BEGIN)
                                           ; SOURCE LINE # 26
;---- Variable 'Byte' assigned to Register 'R5' ----
0000 AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 29
;---- Variable 'i' assigned to Register 'R3' ----
0002 E4                CLR     A
0003 FB                MOV     R3,A
0004         ?C0003:
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0004 7480              MOV     A,#080H
0006 7E00              MOV     R6,#00H
0008 A803              MOV     R0,AR3
000A 08                INC     R0
000B 8006              SJMP    ?C0015
000D         ?C0014:
000D CE                XCH     A,R6
000E A2E7              MOV     C,ACC.7
0010 13                RRC     A
0011 CE                XCH     A,R6
0012 13                RRC     A
0013         ?C0015:
0013 D8F8              DJNZ    R0,?C0014
0015 FF                MOV     R7,A
0016 ED                MOV     A,R5
0017 F582              MOV     DPL,A
0019 EF                MOV     A,R7
001A 5582              ANL     A,DPL
001C 24FF              ADD     A,#0FFH
C51 COMPILER V9.54   I2C                                                                   08/02/2023 12:19:46 PAGE 4   

001E 92A0              MOV     I2C_SDA,C
                                           ; SOURCE LINE # 32
0020 D2A1              SETB    I2C_SCL
                                           ; SOURCE LINE # 33
0022 C2A1              CLR     I2C_SCL
                                           ; SOURCE LINE # 35
0024 0B                INC     R3
0025 BB08DC            CJNE    R3,#08H,?C0003
                                           ; SOURCE LINE # 37
0028         ?C0006:
0028 22                RET     
             ; FUNCTION _I2C_SendByte (END)

             ; FUNCTION I2C_ReceiveByte (BEGIN)
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
;---- Variable 'Byte' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 44
0002 D2A0              SETB    I2C_SDA
                                           ; SOURCE LINE # 46
;---- Variable 'i' assigned to Register 'R6' ----
0004 FE                MOV     R6,A
0005         ?C0007:
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
0005 D2A1              SETB    I2C_SCL
                                           ; SOURCE LINE # 49
0007 30A00D            JNB     I2C_SDA,?C0010
000A 7480              MOV     A,#080H
000C A806              MOV     R0,AR6
000E 08                INC     R0
000F 8002              SJMP    ?C0017
0011         ?C0016:
0011 C3                CLR     C
0012 13                RRC     A
0013         ?C0017:
0013 D8FC              DJNZ    R0,?C0016
0015 4207              ORL     AR7,A
0017         ?C0010:
                                           ; SOURCE LINE # 50
0017 C2A1              CLR     I2C_SCL
                                           ; SOURCE LINE # 51
0019 0E                INC     R6
001A BE08E8            CJNE    R6,#08H,?C0007
001D         ?C0008:
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
001D         ?C0011:
001D 22                RET     
             ; FUNCTION I2C_ReceiveByte (END)

             ; FUNCTION _I2C_SendAck (BEGIN)
                                           ; SOURCE LINE # 56
;---- Variable 'AckBit' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0000 EF                MOV     A,R7
0001 24FF              ADD     A,#0FFH
0003 92A0              MOV     I2C_SDA,C
C51 COMPILER V9.54   I2C                                                                   08/02/2023 12:19:46 PAGE 5   

                                           ; SOURCE LINE # 59
0005 D2A1              SETB    I2C_SCL
                                           ; SOURCE LINE # 60
0007 C2A1              CLR     I2C_SCL
                                           ; SOURCE LINE # 61
0009 22                RET     
             ; FUNCTION _I2C_SendAck (END)

             ; FUNCTION I2C_ReceiveAck (BEGIN)
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 67
0000 D2A0              SETB    I2C_SDA
                                           ; SOURCE LINE # 68
0002 D2A1              SETB    I2C_SCL
                                           ; SOURCE LINE # 69
0004 A2A0              MOV     C,I2C_SDA
0006 E4                CLR     A
0007 33                RLC     A
0008 FF                MOV     R7,A
;---- Variable 'AckBit' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 70
0009 C2A1              CLR     I2C_SCL
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
000B         ?C0013:
000B 22                RET     
             ; FUNCTION I2C_ReceiveAck (END)

C51 COMPILER V9.54   I2C                                                                   08/02/2023 12:19:46 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
I2C_SCL. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
I2C_Start. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_I2C_SendAck . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  AckBit . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
_I2C_SendByte. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  Byte . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
I2C_Stop . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
C51 COMPILER V9.54   I2C                                                                   08/02/2023 12:19:46 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
I2C_ReceiveAck . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  AckBit . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
I2C_SDA. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
I2C_ReceiveByte. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  Byte . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    109    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
