C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\src\main.o
COMPILER INVOKED BY: d:\keil\C51\BIN\C51.exe .\SRC\MAIN.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\Release\src\mai
                    -n.lst) INCDIR(d:/keil/C51/INC;src) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Relea
                    -se\src\main.o)

line level    source

   1          #include<REG51.H>
   2          #include"Key.h"
   3          #include"Delay.h"
   4          #include"Timer0.h"
   5          #include"Nixie.h"
   6          #include"AT24C02.h"
   7          
   8          sbit P2_0=P2^0;
   9          
  10          unsigned char KeyNum;
  11          unsigned char Min,Sec,MinSec;
  12          unsigned char RunFlag;
  13          
  14          void main()
  15          {
  16   1          Timer0_Init();
  17   1          while(1)
  18   1          {
  19   2              KeyNum=Key();
  20   2              if(KeyNum==1)   //K1按键按下
  21   2              {
  22   3                  RunFlag=!RunFlag;   //启动标志位翻转
  23   3              }
  24   2              if(KeyNum==2)  //K2按键按下
  25   2              {
  26   3                  Min=0;   //分秒清0
  27   3                  Sec=0;
  28   3                  MinSec=0;
  29   3              }
  30   2              if(KeyNum==3)  //K3按键按下
  31   2              {
  32   3                 AT24C02_WriteByte(0,Min);  //将分秒写入AT24C02
  33   3                 Delay(5);
  34   3                 AT24C02_WriteByte(1,Sec);
  35   3                 Delay(5);
  36   3                 AT24C02_WriteByte(2,MinSec);
  37   3                 Delay(5);
  38   3              }
  39   2              if(KeyNum==4) //K4按键按下
  40   2              {
  41   3                  Min=AT24C02_ReadByte(0); //读出AT24C02数据
  42   3                  Sec=AT24C02_ReadByte(1);
  43   3                  MinSec=AT24C02_ReadByte(2);
  44   3              }
  45   2      
  46   2              Nixie_SetBuf(1,Min/10);  //设置显示缓存，显示数据
  47   2              Nixie_SetBuf(2,Min%10);
  48   2              Nixie_SetBuf(3,11);
  49   2              Nixie_SetBuf(4,Sec/10);
  50   2              Nixie_SetBuf(5,Sec%10);
  51   2              Nixie_SetBuf(6,11);
  52   2              Nixie_SetBuf(7,MinSec/10);
  53   2              Nixie_SetBuf(8,MinSec%10);
C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 2   

  54   2          }
  55   1      }
  56          
  57          
  58          /**
  59            * @brief  秒表驱动函数，在中断中调用
  60            * @param  无
  61            * @retval 无
  62            */
  63          void Sec_Loop(void)
  64          {
  65   1          if(RunFlag)
  66   1          {
  67   2              MinSec++;
  68   2              if(MinSec>=100)
  69   2              {
  70   3                  MinSec=0;
  71   3                  Sec++;
  72   3                  if(Sec>=60)
  73   3                  {
  74   4                      Sec=0;
  75   4                      Min++;
  76   4                      if(Min>=60)
  77   4                      {
  78   5                      Min=0;
  79   5                      }
  80   4              }
  81   3              }
  82   2          }
  83   1          
  84   1      }
  85          
  86          void Timer0_Routine() interrupt 1
  87          {   
  88   1          static unsigned int T0Count1,T0Count2,T0Count3;
  89   1          TL0 = 0x66;     //设置定时初值
  90   1          TH0 = 0xFC;     //设置定时初值
  91   1          T0Count1++;
  92   1          if(T0Count1>=20)
  93   1          {
  94   2               T0Count1=0;
  95   2               Key_Loop();  //20ms调用一次按键驱动函数
  96   2          }
  97   1          T0Count2++;
  98   1          if(T0Count2>=2)
  99   1          {
 100   2               T0Count2=0;
 101   2               Nixie_Loop();  //2ms调用一次数码管驱动函数
 102   2          }
 103   1         T0Count3++;
 104   1         if(T0Count3>=10)
 105   1         {
 106   2          T0Count3=0;
 107   2          Sec_Loop();  //10ms调用一次数秒表驱动函数
 108   2         }
 109   1      }
C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
0000 120000      E     LCALL   Timer0_Init
0003         ?C0001:
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0003 120000      E     LCALL   Key
0006 8F00        R     MOV     KeyNum,R7
                                           ; SOURCE LINE # 20
0008 E500        R     MOV     A,KeyNum
000A B4010A            CJNE    A,#01H,?C0003
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
000D E500        R     MOV     A,RunFlag
000F 7F00              MOV     R7,#00H
0011 7002              JNZ     ?C0004
0013 7F01              MOV     R7,#01H
0015         ?C0004:
0015         ?C0005:
0015 8F00        R     MOV     RunFlag,R7
                                           ; SOURCE LINE # 23
0017         ?C0003:
                                           ; SOURCE LINE # 24
0017 E500        R     MOV     A,KeyNum
0019 B40207            CJNE    A,#02H,?C0006
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
001C E4                CLR     A
001D F500        R     MOV     Min,A
                                           ; SOURCE LINE # 27
001F F500        R     MOV     Sec,A
                                           ; SOURCE LINE # 28
0021 F500        R     MOV     MinSec,A
                                           ; SOURCE LINE # 29
0023         ?C0006:
                                           ; SOURCE LINE # 30
0023 E500        R     MOV     A,KeyNum
0025 6403              XRL     A,#03H
0027 7033              JNZ     ?C0007
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0029 E500        R     MOV     A,Min
002B FD                MOV     R5,A
002C 7C00              MOV     R4,#00H
002E E4                CLR     A
002F FF                MOV     R7,A
0030 120000      E     LCALL   _AT24C02_WriteByte
                                           ; SOURCE LINE # 33
0033 7F05              MOV     R7,#05H
0035 7E00              MOV     R6,#00H
0037 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 34
003A E500        R     MOV     A,Sec
003C FD                MOV     R5,A
003D 7C00              MOV     R4,#00H
003F 7F01              MOV     R7,#01H
C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 4   

0041 120000      E     LCALL   _AT24C02_WriteByte
                                           ; SOURCE LINE # 35
0044 7F05              MOV     R7,#05H
0046 7E00              MOV     R6,#00H
0048 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 36
004B E500        R     MOV     A,MinSec
004D FD                MOV     R5,A
004E 7C00              MOV     R4,#00H
0050 7F02              MOV     R7,#02H
0052 120000      E     LCALL   _AT24C02_WriteByte
                                           ; SOURCE LINE # 37
0055 7F05              MOV     R7,#05H
0057 7E00              MOV     R6,#00H
0059 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 38
005C         ?C0007:
                                           ; SOURCE LINE # 39
005C E500        R     MOV     A,KeyNum
005E B40415            CJNE    A,#04H,?C0008
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0061 E4                CLR     A
0062 FF                MOV     R7,A
0063 120000      E     LCALL   _AT24C02_ReadByte
0066 8F00        R     MOV     Min,R7
                                           ; SOURCE LINE # 42
0068 7F01              MOV     R7,#01H
006A 120000      E     LCALL   _AT24C02_ReadByte
006D 8F00        R     MOV     Sec,R7
                                           ; SOURCE LINE # 43
006F 7F02              MOV     R7,#02H
0071 120000      E     LCALL   _AT24C02_ReadByte
0074 8F00        R     MOV     MinSec,R7
                                           ; SOURCE LINE # 44
0076         ?C0008:
                                           ; SOURCE LINE # 46
0076 E500        R     MOV     A,Min
0078 75F00A            MOV     B,#0AH
007B 84                DIV     AB
007C FD                MOV     R5,A
007D 7C00              MOV     R4,#00H
007F 7F01              MOV     R7,#01H
0081 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 47
0084 E500        R     MOV     A,Min
0086 75F00A            MOV     B,#0AH
0089 84                DIV     AB
008A E5F0              MOV     A,B
008C FD                MOV     R5,A
008D 7C00              MOV     R4,#00H
008F 7F02              MOV     R7,#02H
0091 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 48
0094 7D0B              MOV     R5,#0BH
0096 7C00              MOV     R4,#00H
0098 7F03              MOV     R7,#03H
009A 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 49
009D E500        R     MOV     A,Sec
009F 75F00A            MOV     B,#0AH
00A2 84                DIV     AB
C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 5   

00A3 FD                MOV     R5,A
00A4 7C00              MOV     R4,#00H
00A6 7F04              MOV     R7,#04H
00A8 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 50
00AB E500        R     MOV     A,Sec
00AD 75F00A            MOV     B,#0AH
00B0 84                DIV     AB
00B1 E5F0              MOV     A,B
00B3 FD                MOV     R5,A
00B4 7C00              MOV     R4,#00H
00B6 7F05              MOV     R7,#05H
00B8 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 51
00BB 7D0B              MOV     R5,#0BH
00BD 7C00              MOV     R4,#00H
00BF 7F06              MOV     R7,#06H
00C1 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 52
00C4 E500        R     MOV     A,MinSec
00C6 75F00A            MOV     B,#0AH
00C9 84                DIV     AB
00CA FD                MOV     R5,A
00CB 7C00              MOV     R4,#00H
00CD 7F07              MOV     R7,#07H
00CF 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 53
00D2 E500        R     MOV     A,MinSec
00D4 75F00A            MOV     B,#0AH
00D7 84                DIV     AB
00D8 E5F0              MOV     A,B
00DA FD                MOV     R5,A
00DB 7C00              MOV     R4,#00H
00DD 7F08              MOV     R7,#08H
00DF 120000      E     LCALL   _Nixie_SetBuf
                                           ; SOURCE LINE # 54
00E2 020000      R     LJMP    ?C0001
             ; FUNCTION main (END)

             ; FUNCTION Sec_Loop (BEGIN)
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0000 E500        R     MOV     A,RunFlag
0002 6022              JZ      ?C0014
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0004 0500        R     INC     MinSec
                                           ; SOURCE LINE # 68
0006 E500        R     MOV     A,MinSec
0008 C3                CLR     C
0009 9464              SUBB    A,#064H
000B 4019              JC      ?C0014
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
000D E4                CLR     A
000E F500        R     MOV     MinSec,A
                                           ; SOURCE LINE # 71
0010 0500        R     INC     Sec
                                           ; SOURCE LINE # 72
0012 E500        R     MOV     A,Sec
0014 943C              SUBB    A,#03CH
C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 6   

0016 400E              JC      ?C0014
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0018 E4                CLR     A
0019 F500        R     MOV     Sec,A
                                           ; SOURCE LINE # 75
001B 0500        R     INC     Min
                                           ; SOURCE LINE # 76
001D E500        R     MOV     A,Min
001F 943C              SUBB    A,#03CH
0021 4003              JC      ?C0014
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0023 E4                CLR     A
0024 F500        R     MOV     Min,A
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 84
0026         ?C0014:
0026 22                RET     
             ; FUNCTION Sec_Loop (END)

             ; FUNCTION Timer0_Routine (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 89
001D 758A66            MOV     TL0,#066H
                                           ; SOURCE LINE # 90
0020 758CFC            MOV     TH0,#0FCH
                                           ; SOURCE LINE # 91
0023 0500        R     INC     T0Count1+01H
0025 E500        R     MOV     A,T0Count1+01H
0027 7002              JNZ     ?C0019
0029 0500        R     INC     T0Count1
002B         ?C0019:
                                           ; SOURCE LINE # 92
002B C3                CLR     C
002C 9414              SUBB    A,#014H
002E E500        R     MOV     A,T0Count1
0030 9400              SUBB    A,#00H
0032 4009              JC      ?C0015
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
0034 750000      R     MOV     T0Count1,#00H
0037 750000      R     MOV     T0Count1+01H,#00H
                                           ; SOURCE LINE # 95
003A 120000      E     LCALL   Key_Loop
C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 7   

                                           ; SOURCE LINE # 96
003D         ?C0015:
                                           ; SOURCE LINE # 97
003D 0500        R     INC     T0Count2+01H
003F E500        R     MOV     A,T0Count2+01H
0041 7002              JNZ     ?C0020
0043 0500        R     INC     T0Count2
0045         ?C0020:
                                           ; SOURCE LINE # 98
0045 C3                CLR     C
0046 9402              SUBB    A,#02H
0048 E500        R     MOV     A,T0Count2
004A 9400              SUBB    A,#00H
004C 4009              JC      ?C0016
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
004E 750000      R     MOV     T0Count2,#00H
0051 750000      R     MOV     T0Count2+01H,#00H
                                           ; SOURCE LINE # 101
0054 120000      E     LCALL   Nixie_Loop
                                           ; SOURCE LINE # 102
0057         ?C0016:
                                           ; SOURCE LINE # 103
0057 0500        R     INC     T0Count3+01H
0059 E500        R     MOV     A,T0Count3+01H
005B 7002              JNZ     ?C0021
005D 0500        R     INC     T0Count3
005F         ?C0021:
                                           ; SOURCE LINE # 104
005F C3                CLR     C
0060 940A              SUBB    A,#0AH
0062 E500        R     MOV     A,T0Count3
0064 9400              SUBB    A,#00H
0066 4009              JC      ?C0018
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0068 750000      R     MOV     T0Count3,#00H
006B 750000      R     MOV     T0Count3+01H,#00H
                                           ; SOURCE LINE # 107
006E 120000      R     LCALL   Sec_Loop
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0071         ?C0018:
0071 D007              POP     AR7
0073 D006              POP     AR6
0075 D005              POP     AR5
0077 D004              POP     AR4
0079 D003              POP     AR3
007B D002              POP     AR2
007D D001              POP     AR1
007F D000              POP     AR0
0081 D0D0              POP     PSW
0083 D082              POP     DPL
0085 D083              POP     DPH
0087 D0F0              POP     B
0089 D0E0              POP     ACC
008B 32                RETI    
             ; FUNCTION Timer0_Routine (END)

C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


Timer0_Routine . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  T0Count1 . . . . . . . . . . . . . .  STATIC   DATA   U_INT    0000H  2
  T0Count2 . . . . . . . . . . . . . .  STATIC   DATA   U_INT    0002H  2
  T0Count3 . . . . . . . . . . . . . .  STATIC   DATA   U_INT    0004H  2
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
P2_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
_AT24C02_ReadByte. . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
Sec_Loop . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
Sec. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0006H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
Min. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0007H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
Key_Loop . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_AT24C02_WriteByte . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
Key. . . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
Timer0_Init. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_Nixie_SetBuf. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
RunFlag. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0008H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
MinSec . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0009H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
C51 COMPILER V9.54   MAIN                                                                  08/02/2023 12:19:46 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
KeyNum . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000AH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_Delay . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
Nixie_Loop . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    411    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
