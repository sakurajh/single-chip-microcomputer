C51 COMPILER V9.54   KEY                                                                   08/02/2023 12:19:46 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\build\Release\src\Key.o
COMPILER INVOKED BY: d:\keil\C51\BIN\C51.exe .\SRC\KEY.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\Release\src\Key.
                    -lst) INCDIR(d:/keil/C51/INC;src) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Release
                    -\src\Key.o)

line level    source

   1          #include <REG51.H>
   2          #include "Delay.h"
   3          
   4          sbit P3_1=P3^1;
   5          sbit P3_2=P3^2;
   6          sbit P3_3=P3^3;
   7          sbit P3_4=P3^4;
   8          sbit P3_0=P3^0;
   9          
  10          
  11          unsigned char Key_KeyNumber;
  12          
  13          /**
  14            * @brief  获取按键键码
  15            * @param  无
  16            * @retval 按下按键的键码，范围：0,1~4,0表示无按键按下
  17            */
  18          unsigned char Key(void)
  19          {
  20   1          unsigned char Temp=0;
  21   1          Temp=Key_KeyNumber;
  22   1          Key_KeyNumber=0;
  23   1          return Temp;
  24   1      }
  25          
  26          
  27          //获取独立按键键码
  28          /**
  29            * @brief  获取当前按键的状态，无消抖及松手检测
  30            * @param  无
  31            * @retval 按下按键的键码，范围：0,1~4,0表示无按键按下
  32            */
  33          unsigned char Key_GetState()
  34          
  35          {
  36   1          unsigned char KeyNumer=0;
  37   1      
  38   1          if(P3_1==0){KeyNumer=1;}
  39   1          if(P3_0==0){KeyNumer=2;}
  40   1          if(P3_2==0){KeyNumer=3;}
  41   1          if(P3_3==0){KeyNumer=4;}
  42   1      
  43   1          return KeyNumer;
  44   1      }
  45          
  46          /**
  47            * @brief  按键驱动函数，在中断中调用
  48            * @param  无
  49            * @retval 无
  50            */
  51          void Key_Loop(void)
  52          {
  53   1          static unsigned char NowState,LastState;
C51 COMPILER V9.54   KEY                                                                   08/02/2023 12:19:46 PAGE 2   

  54   1          LastState=NowState;  //按键状态更新
  55   1          NowState=Key_GetState();    //获取当前按键状态
  56   1          //如果上个时间点按键按下，这个时间点未按下，则是松手瞬间，以此避免消抖和松手检测
  57   1          if(LastState==1&&NowState==0)
  58   1          {
  59   2              Key_KeyNumber=1;
  60   2          }
  61   1          if(LastState==2&&NowState==0)
  62   1          {
  63   2              Key_KeyNumber=2;
  64   2          }
  65   1          if(LastState==3&&NowState==0)
  66   1          {
  67   2              Key_KeyNumber=3;
  68   2          }
  69   1          if(LastState==4&&NowState==0)
  70   1          {
  71   2              Key_KeyNumber=4;
  72   2          }
  73   1      }
C51 COMPILER V9.54   KEY                                                                   08/02/2023 12:19:46 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Key (BEGIN)
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 20
;---- Variable 'Temp' assigned to Register 'R7' ----
0000 E4                CLR     A
                                           ; SOURCE LINE # 21
0001 AF00        R     MOV     R7,Key_KeyNumber
                                           ; SOURCE LINE # 22
0003 F500        R     MOV     Key_KeyNumber,A
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
0005         ?C0001:
0005 22                RET     
             ; FUNCTION Key (END)

             ; FUNCTION Key_GetState (BEGIN)
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
;---- Variable 'KeyNumer' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 38
0002 20B101            JB      P3_1,?C0002
0005 0F                INC     R7
0006         ?C0002:
                                           ; SOURCE LINE # 39
0006 20B002            JB      P3_0,?C0003
0009 7F02              MOV     R7,#02H
000B         ?C0003:
                                           ; SOURCE LINE # 40
000B 20B202            JB      P3_2,?C0004
000E 7F03              MOV     R7,#03H
0010         ?C0004:
                                           ; SOURCE LINE # 41
0010 20B302            JB      P3_3,?C0005
0013 7F04              MOV     R7,#04H
0015         ?C0005:
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
0015         ?C0006:
0015 22                RET     
             ; FUNCTION Key_GetState (END)

             ; FUNCTION Key_Loop (BEGIN)
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 54
0000 850000      R     MOV     LastState,NowState
                                           ; SOURCE LINE # 55
0003 120000      R     LCALL   Key_GetState
0006 8F00        R     MOV     NowState,R7
                                           ; SOURCE LINE # 57
0008 E500        R     MOV     A,LastState
000A B40107            CJNE    A,#01H,?C0007
000D E500        R     MOV     A,NowState
000F 7003              JNZ     ?C0007
                                           ; SOURCE LINE # 58
C51 COMPILER V9.54   KEY                                                                   08/02/2023 12:19:46 PAGE 4   

                                           ; SOURCE LINE # 59
0011 750001      R     MOV     Key_KeyNumber,#01H
                                           ; SOURCE LINE # 60
0014         ?C0007:
                                           ; SOURCE LINE # 61
0014 E500        R     MOV     A,LastState
0016 B40207            CJNE    A,#02H,?C0008
0019 E500        R     MOV     A,NowState
001B 7003              JNZ     ?C0008
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
001D 750002      R     MOV     Key_KeyNumber,#02H
                                           ; SOURCE LINE # 64
0020         ?C0008:
                                           ; SOURCE LINE # 65
0020 E500        R     MOV     A,LastState
0022 B40307            CJNE    A,#03H,?C0009
0025 E500        R     MOV     A,NowState
0027 7003              JNZ     ?C0009
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
0029 750003      R     MOV     Key_KeyNumber,#03H
                                           ; SOURCE LINE # 68
002C         ?C0009:
                                           ; SOURCE LINE # 69
002C E500        R     MOV     A,LastState
002E B40407            CJNE    A,#04H,?C0011
0031 E500        R     MOV     A,NowState
0033 7003              JNZ     ?C0011
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
0035 750004      R     MOV     Key_KeyNumber,#04H
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
0038         ?C0011:
0038 22                RET     
             ; FUNCTION Key_Loop (END)

C51 COMPILER V9.54   KEY                                                                   08/02/2023 12:19:46 PAGE 5   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
P3_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P3_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P3_2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P3_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P3_4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
Key_KeyNumber. . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0002H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
Key_Loop . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  NowState . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
  LastState. . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0001H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
Key. . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  Temp . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
Key_GetState . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  KeyNumer . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
C51 COMPILER V9.54   KEY                                                                   08/02/2023 12:19:46 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     85    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
