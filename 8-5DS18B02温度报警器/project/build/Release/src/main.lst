C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\src\main.o
COMPILER INVOKED BY: d:\keil\C51\BIN\C51.exe .\SRC\MAIN.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\Release\src\mai
                    -n.lst) INCDIR(d:/keil/C51/INC;src) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Relea
                    -se\src\main.o)

line level    source

   1          #include<REG51.H>
   2          #include"Delay.h"
   3          #include"OneWire.h"
   4          #include"DS18B20.h"
   5          #include"Key.h"
   6          #include"LCD1602.h"
   7          #include"AT24C02.h"
   8          #include"Timer0.h"
   9          
  10          
  11          float T,Tshow;
  12          char TLow,THigh;
  13          unsigned char KeyNum;
  14          
  15          void main()
  16          {
  17   1          DS18B20_Convert();
  18   1          Delay(1000);
  19   1          THigh=AT24C02_ReadByte(0);
  20   1          TLow=AT24C02_ReadByte(1);
  21   1          if(THigh>125||TLow<-55||THigh<=TLow)
  22   1          {
  23   2              THigh=20;
  24   2              TLow=15;
  25   2          }
  26   1          LCD_Init();
  27   1          LCD_ShowString(1,1,"T:");
  28   1          LCD_ShowString(2,1,"TH:");
  29   1          LCD_ShowString(2,9,"TL:");
  30   1          LCD_ShowSignedNum(2,4,THigh,3);
  31   1          LCD_ShowSignedNum(2,12,TLow,3);
  32   1          Timer0_Init();
  33   1      
  34   1          while(1)
  35   1          {
  36   2              KeyNum=Key();
  37   2      
  38   2              //温度读取显示
  39   2             DS18B20_Convert();
  40   2              T=DS18B20_ReadT();
  41   2              if(T<0)
  42   2              {
  43   3                  LCD_ShowChar(1,3,'-');
  44   3                  Tshow=-T;
  45   3              }
  46   2              else
  47   2              {
  48   3                  LCD_ShowChar(1,3,'+');
  49   3                  Tshow=T;
  50   3              }
  51   2              LCD_ShowNum(1,4,Tshow,3);
  52   2              LCD_ShowChar(1,7,'.');
  53   2              LCD_ShowNum(1,8,(unsigned long)(Tshow*100)%100,2);
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 2   

  54   2      
  55   2              //阈值判断及显示
  56   2              if(KeyNum)
  57   2              {
  58   3                  if(KeyNum==1)
  59   3                  {
  60   4                      THigh++;
  61   4                      if(THigh>125){THigh=125;}
  62   4                  }
  63   3                  if(KeyNum==2)
  64   3                  {
  65   4                      THigh--;
  66   4                      if(THigh<=TLow){THigh++;}
  67   4                  }
  68   3                  if(KeyNum==3)
  69   3                  {
  70   4                      TLow++;
  71   4                      if(TLow>=THigh){TLow--;}
  72   4                  }
  73   3                  if(KeyNum==4)
  74   3                  {
  75   4                      TLow--;
  76   4                      if(TLow<-55){TLow=-55;}
  77   4                  }
  78   3                  LCD_ShowSignedNum(2,4,THigh,3);
  79   3                  LCD_ShowSignedNum(2,12,TLow,3);
  80   3                  AT24C02_WriteByte(0,THigh);
  81   3                  Delay(5);
  82   3                  AT24C02_WriteByte(1,TLow);
  83   3                  Delay(5);
  84   3              }
  85   2              if(T>THigh)
  86   2              {
  87   3              LCD_ShowString(1,13,"OV:H");
  88   3              }
  89   2              else if(T<TLow)
  90   2              {
  91   3              LCD_ShowString(1,13,"OV:L");
  92   3              }
  93   2              else
  94   2              {
  95   3              LCD_ShowString(1,13,"    ");
  96   3              } 
  97   2          }
  98   1      }
  99          
 100          
 101          void Timer0_Routine() interrupt 1
 102          {   
 103   1          static unsigned int T0Count;
 104   1          TL0 = 0x66;     //设置定时初值
 105   1          TH0 = 0xFC;     //设置定时初值
 106   1          T0Count++;
 107   1          if(T0Count>=20)
 108   1          {
 109   2               T0Count=0;
 110   2               Key_Loop();
 111   2          }
 112   1         
 113   1      }
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
0000 120000      E     LCALL   DS18B20_Convert
                                           ; SOURCE LINE # 18
0003 7FE8              MOV     R7,#0E8H
0005 7E03              MOV     R6,#03H
0007 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 19
000A E4                CLR     A
000B FF                MOV     R7,A
000C 120000      E     LCALL   _AT24C02_ReadByte
000F 8F00        R     MOV     THigh,R7
                                           ; SOURCE LINE # 20
0011 7F01              MOV     R7,#01H
0013 120000      E     LCALL   _AT24C02_ReadByte
0016 8F00        R     MOV     TLow,R7
                                           ; SOURCE LINE # 21
0018 D3                SETB    C
0019 E500        R     MOV     A,THigh
001B 6480              XRL     A,#080H
001D 94FD              SUBB    A,#0FDH
001F 5016              JNC     ?C0002
0021 C3                CLR     C
0022 E500        R     MOV     A,TLow
0024 6480              XRL     A,#080H
0026 9449              SUBB    A,#049H
0028 400D              JC      ?C0002
002A D3                SETB    C
002B E500        R     MOV     A,TLow
002D 6480              XRL     A,#080H
002F F8                MOV     R0,A
0030 E500        R     MOV     A,THigh
0032 6480              XRL     A,#080H
0034 98                SUBB    A,R0
0035 5006              JNC     ?C0001
0037         ?C0002:
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0037 750014      R     MOV     THigh,#014H
                                           ; SOURCE LINE # 24
003A 75000F      R     MOV     TLow,#0FH
                                           ; SOURCE LINE # 25
003D         ?C0001:
                                           ; SOURCE LINE # 26
003D 120000      E     LCALL   LCD_Init
                                           ; SOURCE LINE # 27
0040 7BFF              MOV     R3,#0FFH
0042 7A00        R     MOV     R2,#HIGH ?SC_0
0044 7900        R     MOV     R1,#LOW ?SC_0
0046 7D01              MOV     R5,#01H
0048 7F01              MOV     R7,#01H
004A 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 28
004D 7BFF              MOV     R3,#0FFH
004F 7A00        R     MOV     R2,#HIGH ?SC_3
0051 7900        R     MOV     R1,#LOW ?SC_3
0053 7D01              MOV     R5,#01H
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 4   

0055 7F02              MOV     R7,#02H
0057 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 29
005A 7BFF              MOV     R3,#0FFH
005C 7A00        R     MOV     R2,#HIGH ?SC_7
005E 7900        R     MOV     R1,#LOW ?SC_7
0060 7D09              MOV     R5,#09H
0062 7F02              MOV     R7,#02H
0064 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 30
0067 E500        R     MOV     A,THigh
0069 FB                MOV     R3,A
006A 33                RLC     A
006B 95E0              SUBB    A,ACC
006D FA                MOV     R2,A
006E 750003      E     MOV     ?_LCD_ShowSignedNum?BYTE+04H,#03H
0071 7D04              MOV     R5,#04H
0073 7F02              MOV     R7,#02H
0075 120000      E     LCALL   _LCD_ShowSignedNum
                                           ; SOURCE LINE # 31
0078 E500        R     MOV     A,TLow
007A FB                MOV     R3,A
007B 33                RLC     A
007C 95E0              SUBB    A,ACC
007E FA                MOV     R2,A
007F 750003      E     MOV     ?_LCD_ShowSignedNum?BYTE+04H,#03H
0082 7D0C              MOV     R5,#0CH
0084 7F02              MOV     R7,#02H
0086 120000      E     LCALL   _LCD_ShowSignedNum
                                           ; SOURCE LINE # 32
0089 120000      E     LCALL   Timer0_Init
008C         ?C0003:
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
008C 120000      E     LCALL   Key
008F 8F00        R     MOV     KeyNum,R7
                                           ; SOURCE LINE # 39
0091 120000      E     LCALL   DS18B20_Convert
                                           ; SOURCE LINE # 40
0094 120000      E     LCALL   DS18B20_ReadT
0097 8F00        R     MOV     T+03H,R7
0099 8E00        R     MOV     T+02H,R6
009B 8D00        R     MOV     T+01H,R5
009D 8C00        R     MOV     T,R4
                                           ; SOURCE LINE # 41
009F E4                CLR     A
00A0 FF                MOV     R7,A
00A1 FE                MOV     R6,A
00A2 FD                MOV     R5,A
00A3 FC                MOV     R4,A
00A4 AB00        R     MOV     R3,T+03H
00A6 AA00        R     MOV     R2,T+02H
00A8 A900        R     MOV     R1,T+01H
00AA A800        R     MOV     R0,T
00AC 120000      E     LCALL   ?C?FPCMP3
00AF 501E              JNC     ?C0005
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
00B1 7B2D              MOV     R3,#02DH
00B3 7D03              MOV     R5,#03H
00B5 7F01              MOV     R7,#01H
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 5   

00B7 120000      E     LCALL   _LCD_ShowChar
                                           ; SOURCE LINE # 44
00BA AF00        R     MOV     R7,T+03H
00BC AE00        R     MOV     R6,T+02H
00BE AD00        R     MOV     R5,T+01H
00C0 AC00        R     MOV     R4,T
00C2 120000      E     LCALL   ?C?FPNEG
00C5 8F00        R     MOV     Tshow+03H,R7
00C7 8E00        R     MOV     Tshow+02H,R6
00C9 8D00        R     MOV     Tshow+01H,R5
00CB 8C00        R     MOV     Tshow,R4
                                           ; SOURCE LINE # 45
00CD 8015              SJMP    ?C0006
00CF         ?C0005:
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
00CF 7B2B              MOV     R3,#02BH
00D1 7D03              MOV     R5,#03H
00D3 7F01              MOV     R7,#01H
00D5 120000      E     LCALL   _LCD_ShowChar
                                           ; SOURCE LINE # 49
00D8 850000      R     MOV     Tshow+03H,T+03H
00DB 850000      R     MOV     Tshow+02H,T+02H
00DE 850000      R     MOV     Tshow+01H,T+01H
00E1 850000      R     MOV     Tshow,T
                                           ; SOURCE LINE # 50
00E4         ?C0006:
                                           ; SOURCE LINE # 51
00E4 AF00        R     MOV     R7,Tshow+03H
00E6 AE00        R     MOV     R6,Tshow+02H
00E8 AD00        R     MOV     R5,Tshow+01H
00EA AC00        R     MOV     R4,Tshow
00EC 120000      E     LCALL   ?C?CASTF
00EF AB07              MOV     R3,AR7
00F1 AA06              MOV     R2,AR6
00F3 750003      E     MOV     ?_LCD_ShowNum?BYTE+04H,#03H
00F6 7D04              MOV     R5,#04H
00F8 7F01              MOV     R7,#01H
00FA 120000      E     LCALL   _LCD_ShowNum
                                           ; SOURCE LINE # 52
00FD 7B2E              MOV     R3,#02EH
00FF 7D07              MOV     R5,#07H
0101 7F01              MOV     R7,#01H
0103 120000      E     LCALL   _LCD_ShowChar
                                           ; SOURCE LINE # 53
0106 E4                CLR     A
0107 FF                MOV     R7,A
0108 FE                MOV     R6,A
0109 7DC8              MOV     R5,#0C8H
010B 7C42              MOV     R4,#042H
010D AB00        R     MOV     R3,Tshow+03H
010F AA00        R     MOV     R2,Tshow+02H
0111 A900        R     MOV     R1,Tshow+01H
0113 A800        R     MOV     R0,Tshow
0115 120000      E     LCALL   ?C?FPMUL
0118 120000      E     LCALL   ?C?CASTF
011B E4                CLR     A
011C 7B64              MOV     R3,#064H
011E FA                MOV     R2,A
011F F9                MOV     R1,A
0120 F8                MOV     R0,A
0121 120000      E     LCALL   ?C?ULDIV
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 6   

0124 750002      E     MOV     ?_LCD_ShowNum?BYTE+04H,#02H
0127 7D08              MOV     R5,#08H
0129 7F01              MOV     R7,#01H
012B 120000      E     LCALL   _LCD_ShowNum
                                           ; SOURCE LINE # 56
012E E500        R     MOV     A,KeyNum
0130 7003              JNZ     $ + 5H
0132 020000      R     LJMP    ?C0007
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0135 B4010E            CJNE    A,#01H,?C0008
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
0138 0500        R     INC     THigh
                                           ; SOURCE LINE # 61
013A D3                SETB    C
013B E500        R     MOV     A,THigh
013D 6480              XRL     A,#080H
013F 94FD              SUBB    A,#0FDH
0141 4003              JC      ?C0008
0143 75007D      R     MOV     THigh,#07DH
                                           ; SOURCE LINE # 62
0146         ?C0008:
                                           ; SOURCE LINE # 63
0146 E500        R     MOV     A,KeyNum
0148 B40211            CJNE    A,#02H,?C0010
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
014B 1500        R     DEC     THigh
                                           ; SOURCE LINE # 66
014D D3                SETB    C
014E E500        R     MOV     A,TLow
0150 6480              XRL     A,#080H
0152 F8                MOV     R0,A
0153 E500        R     MOV     A,THigh
0155 6480              XRL     A,#080H
0157 98                SUBB    A,R0
0158 5002              JNC     ?C0010
015A 0500        R     INC     THigh
                                           ; SOURCE LINE # 67
015C         ?C0010:
                                           ; SOURCE LINE # 68
015C E500        R     MOV     A,KeyNum
015E B40311            CJNE    A,#03H,?C0012
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
0161 0500        R     INC     TLow
                                           ; SOURCE LINE # 71
0163 C3                CLR     C
0164 E500        R     MOV     A,THigh
0166 6480              XRL     A,#080H
0168 F8                MOV     R0,A
0169 E500        R     MOV     A,TLow
016B 6480              XRL     A,#080H
016D 98                SUBB    A,R0
016E 4002              JC      ?C0012
0170 1500        R     DEC     TLow
                                           ; SOURCE LINE # 72
0172         ?C0012:
                                           ; SOURCE LINE # 73
0172 E500        R     MOV     A,KeyNum
0174 B4040E            CJNE    A,#04H,?C0014
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 7   

                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
0177 1500        R     DEC     TLow
                                           ; SOURCE LINE # 76
0179 C3                CLR     C
017A E500        R     MOV     A,TLow
017C 6480              XRL     A,#080H
017E 9449              SUBB    A,#049H
0180 5003              JNC     ?C0014
0182 7500C9      R     MOV     TLow,#0C9H
                                           ; SOURCE LINE # 77
0185         ?C0014:
                                           ; SOURCE LINE # 78
0185 E500        R     MOV     A,THigh
0187 FB                MOV     R3,A
0188 33                RLC     A
0189 95E0              SUBB    A,ACC
018B FA                MOV     R2,A
018C 750003      E     MOV     ?_LCD_ShowSignedNum?BYTE+04H,#03H
018F 7D04              MOV     R5,#04H
0191 7F02              MOV     R7,#02H
0193 120000      E     LCALL   _LCD_ShowSignedNum
                                           ; SOURCE LINE # 79
0196 E500        R     MOV     A,TLow
0198 FB                MOV     R3,A
0199 33                RLC     A
019A 95E0              SUBB    A,ACC
019C FA                MOV     R2,A
019D 750003      E     MOV     ?_LCD_ShowSignedNum?BYTE+04H,#03H
01A0 7D0C              MOV     R5,#0CH
01A2 7F02              MOV     R7,#02H
01A4 120000      E     LCALL   _LCD_ShowSignedNum
                                           ; SOURCE LINE # 80
01A7 E500        R     MOV     A,THigh
01A9 FD                MOV     R5,A
01AA 33                RLC     A
01AB 95E0              SUBB    A,ACC
01AD FC                MOV     R4,A
01AE E4                CLR     A
01AF FF                MOV     R7,A
01B0 120000      E     LCALL   _AT24C02_WriteByte
                                           ; SOURCE LINE # 81
01B3 7F05              MOV     R7,#05H
01B5 7E00              MOV     R6,#00H
01B7 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 82
01BA E500        R     MOV     A,TLow
01BC FD                MOV     R5,A
01BD 33                RLC     A
01BE 95E0              SUBB    A,ACC
01C0 FC                MOV     R4,A
01C1 7F01              MOV     R7,#01H
01C3 120000      E     LCALL   _AT24C02_WriteByte
                                           ; SOURCE LINE # 83
01C6 7F05              MOV     R7,#05H
01C8 7E00              MOV     R6,#00H
01CA 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 84
01CD         ?C0007:
                                           ; SOURCE LINE # 85
01CD AC00        R     MOV     R4,THigh
01CF EC                MOV     A,R4
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 8   

01D0 120000      E     LCALL   ?C?FCASTC
01D3 AB00        R     MOV     R3,T+03H
01D5 AA00        R     MOV     R2,T+02H
01D7 A900        R     MOV     R1,T+01H
01D9 A800        R     MOV     R0,T
01DB 120000      E     LCALL   ?C?FPCMP3
01DE 600A              JZ      ?C0016
01E0 4008              JC      ?C0016
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
01E2 7BFF              MOV     R3,#0FFH
01E4 7A00        R     MOV     R2,#HIGH ?SC_11
01E6 7900        R     MOV     R1,#LOW ?SC_11
                                           ; SOURCE LINE # 88
01E8 8019              SJMP    ?C0024
01EA         ?C0016:
                                           ; SOURCE LINE # 89
01EA AC00        R     MOV     R4,TLow
01EC EC                MOV     A,R4
01ED 120000      E     LCALL   ?C?FCASTC
01F0 AB00        R     MOV     R3,T+03H
01F2 AA00        R     MOV     R2,T+02H
01F4 A900        R     MOV     R1,T+01H
01F6 A800        R     MOV     R0,T
01F8 120000      E     LCALL   ?C?FPCMP3
01FB 5010              JNC     ?C0018
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
01FD 7BFF              MOV     R3,#0FFH
01FF 7A00        R     MOV     R2,#HIGH ?SC_16
0201 7900        R     MOV     R1,#LOW ?SC_16
0203         ?C0024:
0203 7D0D              MOV     R5,#0DH
0205 7F01              MOV     R7,#01H
0207 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 92
020A 020000      R     LJMP    ?C0003
020D         ?C0018:
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
020D 7BFF              MOV     R3,#0FFH
020F 7A00        R     MOV     R2,#HIGH ?SC_21
0211 7900        R     MOV     R1,#LOW ?SC_21
0213 7D0D              MOV     R5,#0DH
0215 7F01              MOV     R7,#01H
0217 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
021A 020000      R     LJMP    ?C0003
             ; FUNCTION main (END)

             ; FUNCTION Timer0_Routine (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 9   

0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 104
001D 758A66            MOV     TL0,#066H
                                           ; SOURCE LINE # 105
0020 758CFC            MOV     TH0,#0FCH
                                           ; SOURCE LINE # 106
0023 0500        R     INC     T0Count+01H
0025 E500        R     MOV     A,T0Count+01H
0027 7002              JNZ     ?C0023
0029 0500        R     INC     T0Count
002B         ?C0023:
                                           ; SOURCE LINE # 107
002B C3                CLR     C
002C 9414              SUBB    A,#014H
002E E500        R     MOV     A,T0Count
0030 9400              SUBB    A,#00H
0032 4009              JC      ?C0022
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0034 750000      R     MOV     T0Count,#00H
0037 750000      R     MOV     T0Count+01H,#00H
                                           ; SOURCE LINE # 110
003A 120000      E     LCALL   Key_Loop
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 113
003D         ?C0022:
003D D007              POP     AR7
003F D006              POP     AR6
0041 D005              POP     AR5
0043 D004              POP     AR4
0045 D003              POP     AR3
0047 D002              POP     AR2
0049 D001              POP     AR1
004B D000              POP     AR0
004D D0D0              POP     PSW
004F D082              POP     DPL
0051 D083              POP     DPH
0053 D0F0              POP     B
0055 D0E0              POP     ACC
0057 32                RETI    
             ; FUNCTION Timer0_Routine (END)

C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 10  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


Timer0_Routine . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  T0Count. . . . . . . . . . . . . . .  STATIC   DATA   U_INT    0000H  2
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
TLow . . . . . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     0002H  1
_LCD_ShowNum . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
Tshow. . . . . . . . . . . . . . . . .  PUBLIC   DATA   FLOAT    0003H  4
_AT24C02_ReadByte. . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
Key_Loop . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_AT24C02_WriteByte . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
Key. . . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
Timer0_Init. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
LCD_Init . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
C51 COMPILER V9.54   MAIN                                                                  08/05/2023 12:11:09 PAGE 11  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
T. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   FLOAT    0007H  4
_LCD_ShowString. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
THigh. . . . . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     000BH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
_LCD_ShowChar. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
DS18B20_ReadT. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
KeyNum . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   000CH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
_LCD_ShowSignedNum . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
DS18B20_Convert. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_Delay . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    632    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
