C51 COMPILER V9.54   MAIN                                                                  09/13/2023 21:53:02 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\src\main.o
COMPILER INVOKED BY: d:\keil\C51\BIN\C51.exe .\SRC\MAIN.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\Release\src\mai
                    -n.lst) INCDIR(d:/keil/C51/INC;src) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Relea
                    -se\src\main.o)

line level    source

   1          
   2          #include<reg51.h>
   3          unsigned char code led_mod[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,      //ledœ‘ æ¬Î
   4                            0x7f,0x6f,0x77,0x7c,0x58,0x5e,0x79,0x71};   
   5          unsigned char code key_buf[] = {0xee, 0xde, 0xbe, 0x7e,0xed, 0xdd, 0xbd, 0x7d,//º¸÷µ
   6                            0xeb, 0xdb, 0xbb, 0x7b,0xe7, 0xd7, 0xb7, 0x77};
   7          
   8          char getKey(){
   9   1          char key_scan[] = {0xef,0xdf,0xbf,0x7f};
  10   1          char i=0,j=0;
  11   1          for(i=0;i<4;i++){
  12   2              P2 = key_scan[i];
  13   2              if((P2 & 0x0f)!=0x0f){
  14   3                  for(j=0;j<16;j++){
  15   4                      if(P2==key_buf[j])
  16   4                          return j;
  17   4                  }       
  18   3              }
  19   2              
  20   2          }
  21   1          return -1;
  22   1      }
  23          
  24          void main(){
  25   1          char key=0;
  26   1          P0=0X00;
  27   1          while(1){
  28   2              key=getKey();
  29   2              if(key!=-1){
  30   3                  P0 = led_mod[key];
  31   3              }
  32   2          }
  33   1      }
C51 COMPILER V9.54   MAIN                                                                  09/13/2023 21:53:02 PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION getKey (BEGIN)
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 9
0000 7800        R     MOV     R0,#LOW key_scan
0002 7C00        R     MOV     R4,#HIGH key_scan
0004 7D00              MOV     R5,#00H
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C 7E00              MOV     R6,#00H
000E 7F04              MOV     R7,#04H
0010 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 10
;---- Variable 'i' assigned to Register 'R7' ----
0013 E4                CLR     A
0014 FF                MOV     R7,A
;---- Variable 'j' assigned to Register 'R6' ----
0015 FE                MOV     R6,A
                                           ; SOURCE LINE # 11
0016         ?C0001:
                                           ; SOURCE LINE # 12
0016 7400        R     MOV     A,#LOW key_scan
0018 2F                ADD     A,R7
0019 F8                MOV     R0,A
001A E6                MOV     A,@R0
001B F5A0              MOV     P2,A
                                           ; SOURCE LINE # 13
001D E5A0              MOV     A,P2
001F 540F              ANL     A,#0FH
0021 640F              XRL     A,#0FH
0023 601E              JZ      ?C0003
                                           ; SOURCE LINE # 14
0025 E4                CLR     A
0026 FE                MOV     R6,A
0027         ?C0005:
                                           ; SOURCE LINE # 15
0027 EE                MOV     A,R6
0028 FD                MOV     R5,A
0029 33                RLC     A
002A 95E0              SUBB    A,ACC
002C FC                MOV     R4,A
002D 7400        R     MOV     A,#LOW key_buf
002F 2D                ADD     A,R5
0030 F582              MOV     DPL,A
0032 7400        R     MOV     A,#HIGH key_buf
0034 3C                ADDC    A,R4
0035 F583              MOV     DPH,A
0037 E4                CLR     A
0038 93                MOVC    A,@A+DPTR
0039 B5A003            CJNE    A,P2,?C0007
                                           ; SOURCE LINE # 16
003C AF06              MOV     R7,AR6
003E 22                RET     
                                           ; SOURCE LINE # 17
003F         ?C0007:
003F 0E                INC     R6
0040 BE10E4            CJNE    R6,#010H,?C0005
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 20
C51 COMPILER V9.54   MAIN                                                                  09/13/2023 21:53:02 PAGE 3   

0043         ?C0003:
0043 0F                INC     R7
0044 BF04CF            CJNE    R7,#04H,?C0001
0047         ?C0002:
                                           ; SOURCE LINE # 21
0047 7FFF              MOV     R7,#0FFH
                                           ; SOURCE LINE # 22
0049         ?C0009:
0049 22                RET     
             ; FUNCTION getKey (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
;---- Variable 'key' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 26
0002 F580              MOV     P0,A
0004         ?C0010:
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0004 120000      R     LCALL   getKey
                                           ; SOURCE LINE # 29
0007 EF                MOV     A,R7
0008 F4                CPL     A
0009 60F9              JZ      ?C0010
                                           ; SOURCE LINE # 30
000B EF                MOV     A,R7
000C FD                MOV     R5,A
000D 33                RLC     A
000E 95E0              SUBB    A,ACC
0010 FC                MOV     R4,A
0011 7400        R     MOV     A,#LOW led_mod
0013 2D                ADD     A,R5
0014 F582              MOV     DPL,A
0016 7400        R     MOV     A,#HIGH led_mod
0018 3C                ADDC    A,R4
0019 F583              MOV     DPH,A
001B E4                CLR     A
001C 93                MOVC    A,@A+DPTR
001D F580              MOV     P0,A
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
001F 80E3              SJMP    ?C0010
             ; FUNCTION main (END)

C51 COMPILER V9.54   MAIN                                                                  09/13/2023 21:53:02 PAGE 4   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  key. . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0007H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
_?ix1000 . . . . . . . . . . . . . . .  STATIC   CODE   ARRAY    0020H  4
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
C51 COMPILER V9.54   MAIN                                                                  09/13/2023 21:53:02 PAGE 5   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


led_mod. . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  16
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
key_buf. . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0010H  16
getKey . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  key_scan . . . . . . . . . . . . . .  AUTO     DATA   ARRAY    0000H  4
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0007H  1
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0006H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    107    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
