C51 COMPILER V9.54   MAIN                                                                  08/01/2023 23:20:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\src\main.o
COMPILER INVOKED BY: d:\keil\C51\BIN\C51.exe .\SRC\MAIN.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\Release\src\mai
                    -n.lst) INCDIR(d:/keil/C51/INC;src) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Relea
                    -se\src\main.o)

line level    source

   1          #include <REG51.H>
   2          #include"Key.h"
   3          #include"Delay.h"
   4          #include"LCD1602.h"
   5          #include"I2C.h"
   6          #include"AT24C02.h"
   7          
   8          unsigned char KeyNum;
   9          unsigned int NUm;
  10          
  11          void main()
  12          {
  13   1          LCD_Init();
  14   1          LCD_ShowNum(1,1,NUm,5);
  15   1          // AT24C02_WriteByte(0,123);
  16   1          // Delay(5);
  17   1          // AT24C02_WriteByte(1,145);
  18   1          // Delay(5);
  19   1         // Data=AT24C02_ReadByte(1);
  20   1          //LCD_ShowNum(2,1,Data,3);
  21   1          while(1)
  22   1          {
  23   2              KeyNum=Key();
  24   2              if(KeyNum==1)
  25   2              {
  26   3                  NUm++;
  27   3                  LCD_ShowNum(1,1,NUm,5);
  28   3              }
  29   2              if(KeyNum==2)
  30   2              {
  31   3                  NUm--;
  32   3                  LCD_ShowNum(1,1,NUm,5);
  33   3              }
  34   2              if(KeyNum==3)
  35   2              {
  36   3                  AT24C02_WriteByte(0,NUm%256);
  37   3                  Delay(5);
  38   3                  AT24C02_WriteByte(1,NUm/256);
  39   3                  Delay(5);
  40   3                  LCD_ShowString(2,1,"RIGHT OK");
  41   3                  Delay(1000);
  42   3                  LCD_ShowString(2,1,"     ");
  43   3              }
  44   2              if(KeyNum==4)
  45   2              {
  46   3              NUm=AT24C02_ReadByte(0);
  47   3              NUm|=AT24C02_ReadByte(1)<<8;
  48   3              LCD_ShowNum(1,1,NUm,5);
  49   3              LCD_ShowString(2,1,"read OK");
  50   3              Delay(1000);
  51   3              LCD_ShowString(2,1,"     ");
  52   3              }
  53   2          }
C51 COMPILER V9.54   MAIN                                                                  08/01/2023 23:20:47 PAGE 2   

  54   1      }
C51 COMPILER V9.54   MAIN                                                                  08/01/2023 23:20:47 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 12
                                           ; SOURCE LINE # 13
0000 120000      E     LCALL   LCD_Init
                                           ; SOURCE LINE # 14
0003 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
0006 AB00        R     MOV     R3,NUm+01H
0008 AA00        R     MOV     R2,NUm
000A 7D01              MOV     R5,#01H
000C 7F01              MOV     R7,#01H
000E 120000      E     LCALL   _LCD_ShowNum
0011         ?C0001:
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0011 120000      E     LCALL   Key
0014 8F00        R     MOV     KeyNum,R7
                                           ; SOURCE LINE # 24
0016 E500        R     MOV     A,KeyNum
0018 B40115            CJNE    A,#01H,?C0003
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
001B 0500        R     INC     NUm+01H
001D E500        R     MOV     A,NUm+01H
001F 7002              JNZ     ?C0008
0021 0500        R     INC     NUm
0023         ?C0008:
                                           ; SOURCE LINE # 27
0023 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
0026 FB                MOV     R3,A
0027 AA00        R     MOV     R2,NUm
0029 7D01              MOV     R5,#01H
002B 7F01              MOV     R7,#01H
002D 120000      E     LCALL   _LCD_ShowNum
                                           ; SOURCE LINE # 28
0030         ?C0003:
                                           ; SOURCE LINE # 29
0030 E500        R     MOV     A,KeyNum
0032 B40216            CJNE    A,#02H,?C0004
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0035 E500        R     MOV     A,NUm+01H
0037 1500        R     DEC     NUm+01H
0039 7002              JNZ     ?C0009
003B 1500        R     DEC     NUm
003D         ?C0009:
                                           ; SOURCE LINE # 32
003D 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
0040 AB00        R     MOV     R3,NUm+01H
0042 AA00        R     MOV     R2,NUm
0044 7D01              MOV     R5,#01H
0046 7F01              MOV     R7,#01H
0048 120000      E     LCALL   _LCD_ShowNum
                                           ; SOURCE LINE # 33
004B         ?C0004:
                                           ; SOURCE LINE # 34
004B E500        R     MOV     A,KeyNum
004D 6403              XRL     A,#03H
C51 COMPILER V9.54   MAIN                                                                  08/01/2023 23:20:47 PAGE 4   

004F 7040              JNZ     ?C0005
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0051 FC                MOV     R4,A
0052 AD00        R     MOV     R5,NUm+01H
0054 FF                MOV     R7,A
0055 120000      E     LCALL   _AT24C02_WriteByte
                                           ; SOURCE LINE # 37
0058 7F05              MOV     R7,#05H
005A 7E00              MOV     R6,#00H
005C 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 38
005F E500        R     MOV     A,NUm
0061 FD                MOV     R5,A
0062 7C00              MOV     R4,#00H
0064 7F01              MOV     R7,#01H
0066 120000      E     LCALL   _AT24C02_WriteByte
                                           ; SOURCE LINE # 39
0069 7F05              MOV     R7,#05H
006B 7E00              MOV     R6,#00H
006D 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 40
0070 7BFF              MOV     R3,#0FFH
0072 7A00        R     MOV     R2,#HIGH ?SC_0
0074 7900        R     MOV     R1,#LOW ?SC_0
0076 7D01              MOV     R5,#01H
0078 7F02              MOV     R7,#02H
007A 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 41
007D 7FE8              MOV     R7,#0E8H
007F 7E03              MOV     R6,#03H
0081 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 42
0084 7BFF              MOV     R3,#0FFH
0086 7A00        R     MOV     R2,#HIGH ?SC_9
0088 7900        R     MOV     R1,#LOW ?SC_9
008A 7D01              MOV     R5,#01H
008C 7F02              MOV     R7,#02H
008E 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 43
0091         ?C0005:
                                           ; SOURCE LINE # 44
0091 E500        R     MOV     A,KeyNum
0093 6404              XRL     A,#04H
0095 6003              JZ      $ + 5H
0097 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
009A FF                MOV     R7,A
009B 120000      E     LCALL   _AT24C02_ReadByte
009E 750000      R     MOV     NUm,#00H
00A1 8F00        R     MOV     NUm+01H,R7
                                           ; SOURCE LINE # 47
00A3 7F01              MOV     R7,#01H
00A5 120000      E     LCALL   _AT24C02_ReadByte
00A8 EF                MOV     A,R7
00A9 FE                MOV     R6,A
00AA EE                MOV     A,R6
00AB 4200        R     ORL     NUm,A
                                           ; SOURCE LINE # 48
00AD 750005      E     MOV     ?_LCD_ShowNum?BYTE+04H,#05H
00B0 AB00        R     MOV     R3,NUm+01H
C51 COMPILER V9.54   MAIN                                                                  08/01/2023 23:20:47 PAGE 5   

00B2 AA00        R     MOV     R2,NUm
00B4 7D01              MOV     R5,#01H
00B6 7F01              MOV     R7,#01H
00B8 120000      E     LCALL   _LCD_ShowNum
                                           ; SOURCE LINE # 49
00BB 7BFF              MOV     R3,#0FFH
00BD 7A00        R     MOV     R2,#HIGH ?SC_15
00BF 7900        R     MOV     R1,#LOW ?SC_15
00C1 7D01              MOV     R5,#01H
00C3 7F02              MOV     R7,#02H
00C5 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 50
00C8 7FE8              MOV     R7,#0E8H
00CA 7E03              MOV     R6,#03H
00CC 120000      E     LCALL   _Delay
                                           ; SOURCE LINE # 51
00CF 7BFF              MOV     R3,#0FFH
00D1 7A00        R     MOV     R2,#HIGH ?SC_9
00D3 7900        R     MOV     R1,#LOW ?SC_9
00D5 7D01              MOV     R5,#01H
00D7 7F02              MOV     R7,#02H
00D9 120000      E     LCALL   _LCD_ShowString
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
00DC 020000      R     LJMP    ?C0001
             ; FUNCTION main (END)

C51 COMPILER V9.54   MAIN                                                                  08/01/2023 23:20:47 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
_LCD_ShowNum . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
NUm. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0000H  2
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
_AT24C02_ReadByte. . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_AT24C02_WriteByte . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
Key. . . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
LCD_Init . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
_LCD_ShowString. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
C51 COMPILER V9.54   MAIN                                                                  08/01/2023 23:20:47 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
KeyNum . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0002H  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
_Delay . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    223    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
