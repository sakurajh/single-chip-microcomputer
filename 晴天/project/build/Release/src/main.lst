C51 COMPILER V9.54   MAIN                                                                  07/31/2023 22:44:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\src\main.o
COMPILER INVOKED BY: d:\keil\C51\BIN\C51.exe .\SRC\MAIN.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\build\Release\src\mai
                    -n.lst) INCDIR(d:/keil/C51/INC;src) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Relea
                    -se\src\main.o)

line level    source

   1          #include <reg51.h>
   2          sbit   speaker = P2^5;
   3          unsigned char timer0h, timer0l, time;
   4          //--------------------------------------
   5          code unsigned char FREQH[] = {
   6              0xF2, 0xF3, 0xF5, 0xF5, 0xF6, 0xF7, 0xF8,    //1234567
   7              0xF9, 0xF9, 0xFA, 0xFA, 0xFB, 0xFB, 0xFC, 0xFC,//1,2,3,4,5,6,7,i
   8              0xFC, 0xFD, 0xFD, 0xFD, 0xFD, 0xFE,            // 234567
   9              0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF};   // 1234567
  10           
  11          code unsigned char FREQL[] = {
  12              0x42, 0xC1, 0x17, 0xB6, 0xD0, 0xD1, 0xB6,    //1234567
  13              0x21, 0xE1, 0x8C, 0xD8, 0x68, 0xE9, 0x5B, 0x8F, //1,2,3,4,5,6,7,i
  14              0xEE, 0x44, 0x6B, 0xB4, 0xF4, 0x2D,             // 234567
  15              0x47, 0x77, 0xA2, 0xB6, 0xDA, 0xFA, 0x16};
  16          //--------------------------------------
  17          code unsigned char qu[] = {
  18          6,1,4,  1,2,4,  5,2,4, 1,2,4,  4,1,4, 5,1,2,  6,1,2,  5,2,4,  1,2,4, 
  19          1,1,4,  5,1,4,  5,2,4, 1,2,4, 1,1,4, 5,2,4,  7,1,4,  5,2,4,
  20          6,1,4,  1,2,4,  5,2,4, 6,1,4, 4,1,4, 5,1,2,  6,1,2,  5,2,4, 1,2,4,
  21          1,1,4,  5,1,4,  5,2,4, 1,2,4, 1,1,4, 5,2,4,  7,1,2,  1,2,2, 5,2,4,//Ç°×à
  22          5,2,4,  5,2,4,  1,2,4, 1,2,8, 2,2,4, 3,2,4,  //¹ÊÊÂµÄÐ¡»Æ»¨
  23          5,2,4,  5,2,4,  1,2,4, 2,2,2, 3,2,2, 2,2,2,  1,2,2,  5,1,4,//´Ó³öÉúÄÇÄê¾ÍÆ®×Å
  24          5,2,4,  5,2,4,  1,2,4, 1,2,8, 2,2,4, 3,2,4,//Í¯ÄêµÄµ´ÇïÇ§
  25          3,2,4,  2,2,2,  3,2,2, 4,2,2, 3,2,2, 2,2,2,  4,2,2,  3,2,2, 2,2,2, 1,2,4,//Ëæ¼ÇÒäÒ»Ö±»Îµ½ÏÖÔÚ
  26          5,1,4,  1,2,4,  1,2,4, 3,2,4, 4,2,4, 3,2,4,  2,2,4,  1,2,2, 2,2,4, 3,2,4,  3,2,4, 3,2,4,  3,2,4,  2,2,2,  
             -3,2,2,  2,2,4, 1,2,8, //Re So So Si Do Si La  So  La Si Si Si La Si La So 
  27          5,1,4,  1,2,4,  2,2,4,  3,2,4, 4,2,4, 3,2,4, 2,2,4,  1,2,2,//´µ×ÅÇ°×àÍû×ÅÌì¿Õ 
  28          2,2,2,  3,2,4,  3,2,4,  3,2,4,  3,2,4,  2,2,2,  3,2,2,  2,2,4, 1,2,2,//ÎÒÏëÆð»¨°êÊÔ×ÅµôÂä
  29          7,1,2,  1,2,2,  1,2,2,  1,2,2,  1,2,2,  7,1,2,  1,2,4, 1,2,2, //ÎªÄãÇÌ¿ÎµÄÄÇÒ»Ìì
  30          1,2,2, 1,2,2, 1,2,2, 1,2,2, 7,1,2, 1,2,4, 1,2,2, //»¨ÂäµÃÄÇÒ»Ìì
  31          1,2,2, 1,2,2, 1,2,2, 1,2,2, 7,1,2, 1,2,4, 1,2,2, //½ÌÊÒµÄÄÇÒ»¼ä
  32          1,2,2, 1,2,2, 1,2,2, 1,2,2, 5,2,2, 5,2,4, 5,2,2,//ÎÒÔõÃ´¿´²»¼û
  33          5,2,2, 5,2,2, 5,2,2, 5,2,2, 5,2,4, 5,2,2, //ÏûÊ§µÄÏÂÓêÌì
  34          5,2,2, 5,2,2, 5,2,2, 5,2,2, 4,2,2, 3,2,2, 3,2,2, //ÎÒºÃÏëÔÙÁÜÒ»±é
  35          1,2,2, 1,2,2, 1,2,2, 1,2,2, 6,1,4, 7,1,4, 1,2,4, 5,2,4, 4,2,4, 3,2,4, 1,2,4, 1,2,4,//Ã»Ïëµ½Ê§È¥µÄÓÂÆøÎÒ»¹Á
             -ô×Å
  36          1,2,2, 1,2,2, 1,2,2, 1,2,2, 3,2,4, 1,2,4, //ºÃÏëÔÙÎÊÒ»±é
  37          6,1,4, 7,1,4, 1,2,4, 5,2,4, 4,2,4, 3,2,4, 1,2,4, 2,2,4, 2,2,10,//Äã»áµÈ´ý»¹ÊÇÀë¿ª
  38          3,2,4, 2,2,4, 4,2,4, 3,2,8, 1,2,4, 5,2,4, 7,2,4, 1,3,4, 7,2,4, 1,2,4, 1,2,8,// ¹Î·çÕâÌìÎÒÊÔ¹ýÎÕ×ÅÄãÊÖ
  39          1,2,4, 6,2,4, 6,2,4, 6,2,4, 5,2,4, 5,2,8, 5,2,4, 4,2,4, 3,2,4, 2,2,4, 3,2,4, 3,2,4, 3,2,10,//µ«Æ«Æ«Óê½¥½¥´
             -óµ½ÎÒ¿´Äã²»¼û
  40          3,2,4, 4,2,4, 5,2,4, 3,2,8, 4,2,4, 5,2,4, 7,2,4, 2,3,4, 7,2,4, 1,3,4, 1,3,8,//»¹Òª¶à¾ÃÎÒ²ÅÄÜÔÚÄãÉí±ß
  41          1,3,4, 1,3,4, 5,2,4, 5,2,4, 6,2,4, 5,2,2, 4,2,2, 4,2,4, 2,2,4, 3,2,4, 4,2,4, 5,2,4, 6,2,4, 1,2,4, 6,2,6, 7
             -,2,2, 7,2,4, //µÈµ½·ÅÇçµÄÄÇÌìÒ²ÐíÎÒ»á±È½ÏºÃÒ»µã
  42          3,2,4, 2,2,4, 4,2,4, 3,2,8, 1,2,4, 5,2,4, 7,2,4, 1,3,4, 7,2,4, 1,2,4, 1,2,8,//´ÓÇ°´ÓÇ°ÓÐ¸öÈË°®ÄãºÜ¾Ã
  43          1,2,4, 6,2,4, 6,2,4, 6,2,4, 5,2,4, 5,2,8, 5,2,4, 4,2,4, 3,2,4, 2,2,4, 3,2,4, 4,2,4, 3,2,4, 3,2,10,//µ«Æ«Æ«
             -·ç½¥½¥°Ñ¾àÀë´µµÄºÃÔ¶
  44          3,2,4, 4,2,4, 5,2,4, 3,2,8, 4,2,4, 5,2,4, 7,2,4, 2,3,4, 7,2,4, 1,3,4, 1,3,4,// ºÃ²»ÈÝÒ×ÓÖÄÜÔÙ¶à°®Ò»Ìì
  45          1,3,4, 1,3,4, 5,2,4, 5,2,4, 6,2,4, 5,2,4, 4,2,4, 6,1,4, 7,1,4, 1,2,4, 2,2,4, 3,2,4, 2,2,4, 3,2,4, 1,2,4, 1
             -,2,10, //µ«¹ÊÊÂµÄ×îºóÄãºÃÏñ»¹ÊÇËµÁË°Ý°Ý
  46          0,0,0,}  ;
  47           
C51 COMPILER V9.54   MAIN                                                                  07/31/2023 22:44:27 PAGE 2   

  48            void t0int() interrupt 1   
  49          {
  50   1          TR0 = 0;
  51   1          speaker = !speaker;
  52   1          TH0 = timer0h;     
  53   1          TL0 = timer0l;
  54   1          TR0 = 1; 
  55   1      }
  56          //--------------------------------------
  57          void delay(unsigned char t)     
  58          {
  59   1          unsigned char t1;
  60   1          unsigned long t2;
  61   1          for(t1 = 0; t1 < t; t1++)
  62   1            for(t2 = 0; t2 < 1900; t2++); 
  63   1          TR0 = 0;
  64   1      }
  65          //--------------------------------------
  66          void song()                     
  67          {
  68   1          TH0 = timer0h;               
  69   1          TL0 = timer0l;
  70   1          TR0 = 1;                     
  71   1          delay(time);
  72   1      }
  73          //--------------------------------------
  74          void main()
  75          {
  76   1          unsigned char k;
  77   1          unsigned long int i;
  78   1          TMOD = 1;
  79   1          ET0 = 1; 
  80   1          EA = 1;
  81   1          while(1) {
  82   2            i = 0;
  83   2            time = 1;
  84   2            while(time) {
  85   3              k = qu[i] + 7 * qu[i + 1] - 1;
  86   3              timer0h = FREQH[k];
  87   3              timer0l = FREQL[k];
  88   3              time = qu[i + 2];
  89   3              i += 3;
  90   3              song();
  91   3                      }
  92   2      }
  93   1      }
C51 COMPILER V9.54   MAIN                                                                  07/31/2023 22:44:27 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION t0int (BEGIN)
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 50
0000 C28C              CLR     TR0
                                           ; SOURCE LINE # 51
0002 B2A5              CPL     speaker
                                           ; SOURCE LINE # 52
0004 85008C      R     MOV     TH0,timer0h
                                           ; SOURCE LINE # 53
0007 85008A      R     MOV     TL0,timer0l
                                           ; SOURCE LINE # 54
000A D28C              SETB    TR0
                                           ; SOURCE LINE # 55
000C 32                RETI    
             ; FUNCTION t0int (END)

             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 57
0000 8F00        R     MOV     t,R7
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 61
0002 E4                CLR     A
0003 F500        R     MOV     t1,A
0005         ?C0002:
0005 E500        R     MOV     A,t1
0007 C3                CLR     C
0008 9500        R     SUBB    A,t
000A 5039              JNC     ?C0003
                                           ; SOURCE LINE # 62
000C E4                CLR     A
000D F500        R     MOV     t2+03H,A
000F F500        R     MOV     t2+02H,A
0011 F500        R     MOV     t2+01H,A
0013 F500        R     MOV     t2,A
0015         ?C0005:
0015 E4                CLR     A
0016 7F6C              MOV     R7,#06CH
0018 7E07              MOV     R6,#07H
001A FD                MOV     R5,A
001B FC                MOV     R4,A
001C AB00        R     MOV     R3,t2+03H
001E AA00        R     MOV     R2,t2+02H
0020 A900        R     MOV     R1,t2+01H
0022 A800        R     MOV     R0,t2
0024 C3                CLR     C
0025 120000      E     LCALL   ?C?ULCMP
0028 5017              JNC     ?C0004
002A E500        R     MOV     A,t2+03H
002C 2401              ADD     A,#01H
002E F500        R     MOV     t2+03H,A
0030 E4                CLR     A
0031 3500        R     ADDC    A,t2+02H
0033 F500        R     MOV     t2+02H,A
0035 E4                CLR     A
0036 3500        R     ADDC    A,t2+01H
0038 F500        R     MOV     t2+01H,A
003A E4                CLR     A
003B 3500        R     ADDC    A,t2
003D F500        R     MOV     t2,A
C51 COMPILER V9.54   MAIN                                                                  07/31/2023 22:44:27 PAGE 4   

003F 80D4              SJMP    ?C0005
0041         ?C0004:
0041 0500        R     INC     t1
0043 80C0              SJMP    ?C0002
0045         ?C0003:
                                           ; SOURCE LINE # 63
0045 C28C              CLR     TR0
                                           ; SOURCE LINE # 64
0047 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION song (BEGIN)
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0000 85008C      R     MOV     TH0,timer0h
                                           ; SOURCE LINE # 69
0003 85008A      R     MOV     TL0,timer0l
                                           ; SOURCE LINE # 70
0006 D28C              SETB    TR0
                                           ; SOURCE LINE # 71
0008 AF00        R     MOV     R7,time
000A 020000      R     LJMP    _delay
             ; FUNCTION song (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 78
0000 758901            MOV     TMOD,#01H
                                           ; SOURCE LINE # 79
0003 D2A9              SETB    ET0
                                           ; SOURCE LINE # 80
0005 D2AF              SETB    EA
0007         ?C0010:
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0007 E4                CLR     A
0008 F500        R     MOV     i+03H,A
000A F500        R     MOV     i+02H,A
000C F500        R     MOV     i+01H,A
000E F500        R     MOV     i,A
                                           ; SOURCE LINE # 83
0010 750001      R     MOV     time,#01H
0013         ?C0012:
                                           ; SOURCE LINE # 84
0013 E500        R     MOV     A,time
0015 60F0              JZ      ?C0010
                                           ; SOURCE LINE # 85
0017 AE00        R     MOV     R6,i+02H
0019 AF00        R     MOV     R7,i+03H
001B 7400        R     MOV     A,#LOW qu+01H
001D 2F                ADD     A,R7
001E F582              MOV     DPL,A
0020 7400        R     MOV     A,#HIGH qu+01H
0022 3E                ADDC    A,R6
0023 F583              MOV     DPH,A
0025 E4                CLR     A
0026 93                MOVC    A,@A+DPTR
0027 75F007            MOV     B,#07H
002A A4                MUL     AB
002B FD                MOV     R5,A
C51 COMPILER V9.54   MAIN                                                                  07/31/2023 22:44:27 PAGE 5   

002C 7400        R     MOV     A,#LOW qu
002E 2F                ADD     A,R7
002F F582              MOV     DPL,A
0031 7400        R     MOV     A,#HIGH qu
0033 3E                ADDC    A,R6
0034 F583              MOV     DPH,A
0036 E4                CLR     A
0037 93                MOVC    A,@A+DPTR
0038 2D                ADD     A,R5
0039 14                DEC     A
003A F500        R     MOV     k,A
                                           ; SOURCE LINE # 86
003C 900000      R     MOV     DPTR,#FREQH
003F 93                MOVC    A,@A+DPTR
0040 F500        R     MOV     timer0h,A
                                           ; SOURCE LINE # 87
0042 E500        R     MOV     A,k
0044 900000      R     MOV     DPTR,#FREQL
0047 93                MOVC    A,@A+DPTR
0048 F500        R     MOV     timer0l,A
                                           ; SOURCE LINE # 88
004A 7400        R     MOV     A,#LOW qu+02H
004C 2500        R     ADD     A,i+03H
004E F582              MOV     DPL,A
0050 7400        R     MOV     A,#HIGH qu+02H
0052 3E                ADDC    A,R6
0053 F583              MOV     DPH,A
0055 E4                CLR     A
0056 93                MOVC    A,@A+DPTR
0057 F500        R     MOV     time,A
                                           ; SOURCE LINE # 89
0059 E500        R     MOV     A,i+03H
005B 2403              ADD     A,#03H
005D F500        R     MOV     i+03H,A
005F E4                CLR     A
0060 3500        R     ADDC    A,i+02H
0062 F500        R     MOV     i+02H,A
0064 E4                CLR     A
0065 3500        R     ADDC    A,i+01H
0067 F500        R     MOV     i+01H,A
0069 E4                CLR     A
006A 3500        R     ADDC    A,i
006C F500        R     MOV     i,A
                                           ; SOURCE LINE # 90
006E 120000      R     LCALL   song
                                           ; SOURCE LINE # 91
0071 80A0              SJMP    ?C0012
             ; FUNCTION main (END)

C51 COMPILER V9.54   MAIN                                                                  07/31/2023 22:44:27 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_delay . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  t. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  t1 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  t2 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0002H  4
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  k. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0001H  4
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
time . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
song . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
timer0h. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0001H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
timer0l. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0002H  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
C51 COMPILER V9.54   MAIN                                                                  07/31/2023 22:44:27 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
qu . . . . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0038H  819
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
speaker. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
t0int. . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
FREQH. . . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  28
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
FREQL. . . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    001CH  28


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    216    ----
   CONSTANT SIZE    =    875    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
